#include <stdio.h>
#include <math.h>


//第１問
//以下の2進数の計算に答えよ。
//1011 + 0101
//110100 + 11011
//1011 + 110011

/*
* 2^3*1 + 2^2*0 + 2^1*1 + 2^0*1 =11
* 2^3*0 + 2^2*1 + 2^1*0 + 2^0*1 =5
* 11 + 5 = 16
* 
* 32+16+4 + 16+8+2+1 =79
* 
* 11 + 32+16+2+1 =62
* 
* 上から順に答えは16,79,62
* 2進数に直すと
* 10000
* 1001111
* 111110
*/

//第２問
//以下の16進数の計算に答えよ。
//FF + FF
//ed + 10
//563 + cd

/*
* 16^1*15 + 16^0*15 * 2 = 255*2 = 510
* 
* 16*14 + 13 + 16 = 268
* 
* 256*5 + 16*6 + 3 + 16*12 + 13 = 256*5 + 16*19 = 1584
* 
* 上から順に答えは510,268,1584
* 16進数に直すと
* 1FE
* 10C
* 630
*/

//第３問
//char、int、float、doubleのサイズはそれぞれいくつか答えよ。

/*
* char 1bite
* int 4bite
* float 4bite
* double 8bite
*/

//第４問
//int judge = true;
//if (judge)
//{
//	①
//}
//else
//{
//	②
//}
//①と②どちらが処理されるか答えよ。

/*
* ①
*/

//第５問
//for (int i = 0; i < 100; i = i + 3)
//{
//	①
//}
//①の処理が何回実行されるか答えよ。

/*
* 34回
*/

//第６問
//int i = 0;
//while (i < 100)
//{
//	i = i + 5;
//	①
//}
//①の処理は何回実行されるか答えよ。

/*
* 20回
*/

//第７問
//int array[4][5];
//上記配列のサイズはいくつか答えよ。

/*
* 20個
*/

//第８問
//int array[5][20]
//for (int i = 0; i < 5; ++i)
//{
//	for (int j = 0; j < ①; ++j)
//	{
//		array[i][j] = i * ① + j;
//	}
//}
//①には何という数字が入るか答えよ。

/*
* 20
*/

//第９問
//① testFunc(int a)
//{
//	return;
//}
//①にはint, float, voidのどれが正しいか答えよ。

/*
* void
*/

//第１０問
//２点間の距離を求める関数を作成してください。

/*int main()
{
	double X1;
	double Y1;
	double X2;
	double Y2;

	printf_s("XY平面上の2点の座標P(X1, Y1),Q(X2, Y2)の成分の値をそれぞれ入力してください。\n");
	scanf_s("%lf %lf", &X1, &Y1);
	scanf_s("%lf %lf", &X2, &Y2);

	double distance = pow((X2 - X1) * (X2 - X1) + (Y2 - Y1) * (Y2 - Y1), 0.5);

	printf_s("座標P,Qの距離は%0.1lfです。\n", distance);

	return 0;
}
*/

//第１１問
//カード構造体を作成してください。
//このカードはトランプのカードのことです。
//情報として、なんのカードなのかを持っていてください。
//スペードの7である、ハートの13であるなど。
//この構造体には現在の自分の情報を設定する処理と、
//現在の自分の情報を開示する処理を作ってください。
//トランプの山札の構造体を作成してください。
//その際カードには先ほど作った構造体を使用してください。
//以下の条件を満たしておくこと。
//トランプの枚数は53枚(1 ～ 13 * 4 + ジョーカー1)
//Card card[53];
//シャッフル機能を実装する。
//card[53]にランダムにカード情報を付与してください。
//card[0]がクラブの6、card[1]がハートの5といったように。
//その際同じカードは存在しないようにしてください。

//すみません、解ききれなかったです。
struct TRAMPCARD
{
	int id;
	int mark;
	int rank;
};